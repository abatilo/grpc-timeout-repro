---
name: Build
"on":
  push:
    branches:
      - main
  pull_request: {}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: asdf-vm/actions/install@v1.0.1
      - name: Override host Go installation
        run: |
          export GOVERSION=$(cat .tool-versions | grep 'golang ' | awk '{print $2}')
          echo "GOROOT=$HOME/.asdf/installs/golang/$GOVERSION/go/" >> $GITHUB_ENV
          echo "GOTOOLDIR=$HOME/.asdf/installs/golang/$GOVERSION/go/pkg/tool/linux_amd64" >> $GITHUB_ENV

      # Check go vendor cache
      - name: Cache go dependencies
        id: cache-vendor
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Vendor dependencies
        if: steps.cache-vendor.outputs.cache-hit != 'true'
        run: |
          go mod vendor

      # Check Docker image cache
      - name: Cache Docker layers
        id: cache-docker
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Set up Docker Buildx
        if: steps.cache-docker.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v1

      # Build and push container
      - name: Login to GitHub Container Registry
        if: steps.cache-docker.outputs.cache-hit != 'true'
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io -u abatilo --password-stdin
      - name: Build and push
        if: steps.cache-docker.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name == 'push' }}
          tags: ghcr.io/abatilo/grpc-timeout-repro:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: .
          file: ./build/Dockerfile
          labels: |
            org.opencontainers.image.source=https://github.com/abatilo/grpc-timeout-repro
